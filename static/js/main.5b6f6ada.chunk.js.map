{"version":3,"sources":["actions/updateMovies.js","actions/fetchUsers.js","Map.js","App.js","reducers/movielistReducer.js","reducers/userReducer.js","store/index.js","index.js"],"names":["UPDATE_MOVIES","updateMovies","type","payload","FETCH_USERS","fetchUsers","dispatch","fetch","then","res","json","Map","className","Component","connect","state","movies","users","props","length","map","user","negative","positive","onClick","movielistReducer","name","userReducer","undefined","middleware","thunk","allReducers","combineReducers","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAgB,gBAUdC,EARM,CACjBC,KAAMF,EAENG,QAAS,sBCLAC,EAAc,cAMZC,EALI,SAACC,GAClBC,MAAM,wDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASH,EAAS,CAAEJ,KAAME,EAAaD,QAASM,Q,gDCc3CE,E,uKAbX,OACE,sBAAKC,UAAU,MAAf,UACE,sDACA,yGAIA,cAAC,IAAD,W,GATUC,aCwBlB,IAYeC,eAZS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMC,OACdC,MAAOF,EAAME,UAGU,SAACX,GAC1B,MAAO,CACLL,aAAc,kBAAMK,EAASL,IAC7BI,WAAY,kBAAMC,EAASD,OAGhBS,EA/Bf,SAAaI,GACX,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,IACA,6CACA,uBACiB,OAAhBM,EAAMD,OAAyC,IAAvBC,EAAMD,MAAME,OACnC,wCACkB,OAAhBD,EAAMD,MACRC,EAAMD,MAAMG,KAAI,SAACC,GAAD,OACd,8BACGA,EAAKC,SADR,MACqBD,EAAKE,WADlBF,EAAKN,UAIb,KACJ,uBAbF,IAaS,wBAAQS,QAASN,EAAMb,WAAvB,oC,OCTEoB,EAZU,WAAiC,IAAhCV,EAA+B,uDAAxB,GAAwB,yCAAnBb,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAExC,OAAOD,GAEH,KAAKF,EACD,MAAO,CAAC0B,KAAMvB,GACd,QACA,OAAOY,ICIJY,EAZK,WAAoC,IAAnCZ,EAAkC,uDAA1B,GAA0B,yCAApBb,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC,QAAgByB,IAAZzB,EACF,OAAO,KAEP,OAAQD,GACN,KAAKE,EACH,OAAOD,EACT,QACE,OAAOY,ICLTc,EAAa,C,MAACC,GACdC,EAAcC,YAAgB,CAClChB,OAAQS,EACRR,MAAOU,IAcMM,EARDC,YACZH,EALmB,CACnBd,MAAO,GACPD,OAAQ,CAAEU,KAAM,iBAKhBS,YACEC,IAAe,WAAf,EAAmBP,GACnBQ,OAAOC,8BAAgCD,OAAOC,iCCVlDC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.5b6f6ada.chunk.js","sourcesContent":["export const UPDATE_MOVIES = \"UPDATE_MOVIES\"\r\n\r\nconst updateMovies = {\r\n    type: UPDATE_MOVIES,\r\n\r\n    payload: \"THE BREAKFAST CLUB\"\r\n\r\n\r\n};\r\n\r\nexport default updateMovies;","export const FETCH_USERS = \"FETCH_USERS\";\r\nconst fetchUsers = (dispatch) => {\r\n  fetch(\"https://api.covidtracking.com/v1/states/current.json\")\r\n    .then((res) => res.json())\r\n    .then((res) => dispatch({ type: FETCH_USERS, payload: res }));\r\n};\r\nexport default fetchUsers;\r\n","import React, { Component } from \"react\";\r\nimport USAMap from \"react-usa-map\";\r\n\r\nclass Map extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Covid Cases by State</h1>\r\n        <h4>\r\n          Click on a state to see how many positive Corona cases it currently\r\n          has\r\n        </h4>\r\n        <USAMap />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport updateMovies from \"./actions/updateMovies\";\r\nimport fetchUsers from \"./actions/fetchUsers\";\r\nimport USAMap from \"react-usa-map\";\r\nimport Map from \"./Map.js\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Map />\r\n      <h3>Corona Data</h3>\r\n      <br />\r\n      {props.users !== null && props.users.length === 0 ? (\r\n        <p>no Data</p>\r\n      ) : props.users !== null ? (\r\n        props.users.map((user) => (\r\n          <p key={user.state}>\r\n            {user.negative} - {user.positive}\r\n          </p>\r\n        ))\r\n      ) : null}\r\n      <br /> <button onClick={props.fetchUsers}>Find Corona Data</button>\r\n    </div>\r\n  );\r\n}\r\nconst MapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies,\r\n    users: state.users,\r\n  };\r\n};\r\nconst MapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateMovies: () => dispatch(updateMovies),\r\n    fetchUsers: () => dispatch(fetchUsers),\r\n  };\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(App);\r\n","import {UPDATE_MOVIES} from '../actions/updateMovies';\r\n\r\nconst movielistReducer = (state ={}, {type, payload}) => {\r\n\r\n    switch(type) {\r\n\r\n        case UPDATE_MOVIES :\r\n            return {name: payload}\r\n            default :\r\n            return state\r\n        };\r\n    };\r\n\r\n    \r\nexport default movielistReducer;\r\n\r\n","import { FETCH_USERS } from \"../actions/fetchUsers\";\r\nconst userReducer = (state = {}, { type, payload }) => {\r\n  if (payload === undefined) {\r\n    return null;\r\n  } else {\r\n    switch (type) {\r\n      case FETCH_USERS:\r\n        return payload;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\nexport default userReducer;\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport movielistReducer from \"../reducers/movielistReducer\";\r\nimport userReducer from \"../reducers/userReducer.js\";\r\nimport thunk from \"redux-thunk\";\r\nconst middleware = [thunk];\r\nconst allReducers = combineReducers({\r\n  movies: movielistReducer,\r\n  users: userReducer,\r\n});\r\nconst initialState = {\r\n  users: [],\r\n  movies: { name: \"TERMINATOR 2\" },\r\n};\r\nconst store = createStore(\r\n  allReducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n//import * as serviceWorker from './serviceWorker';\r\nimport store from \"./store/index\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}